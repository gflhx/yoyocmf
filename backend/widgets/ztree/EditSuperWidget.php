<?php
/**
 * Created by PhpStorm. 高级 增 / 删 / 改 节点
 * User: yoyo
 * Date: 2018/4/13
 * Time: 下午3:37
 */
namespace backend\widgets\ztree;

use backend\widgets\ztree\assets\ZtreeAssets;
use yii\base\Widget;
use yii\helpers\Json;
use yii\helpers\ArrayHelper;

class EditSuperWidget extends Widget{

    // 传输data的json格式为，如出错，请先打印$this->data,注意大小写：
    //[
    //  { id:1, pId:0, name:"父节点 1", open:true}, // 父节点是否打开
    //  { id:11, pId:1, name:"叶子节点 1-1"},
    //  { id:12, pId:1, name:"叶子节点 1-2"}
    //]

    /**
     * @var array 用于存放数据列表
     */
    public $data = [];
    public $treeId = "treeDemo"; // 以防多个tree的时候，这里自定义
    public $ztreeName = "zNodes"; // 以防多个tree的时候，这里自定义

    public $addNodeUrl = ""; // 添加节点的ajax地址
    public $newNodeDefautTxt = "new node1"; // 添加节点时默认输出入的文字提示

    public $renameUrl = ""; // 重命名的ajax地址

    public $removeNodeUrl = ""; // 删除节点的ajax地址

    public $isRemoveConfirm = true; // 删除节点时是否需要确认框
    public $isRenameConfirm = true; // 重命名节点时是否需要确认框

    public $odr = "odr"; // 排序字段名，默认为odr

    protected $_setting;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

    }

    public function run()
    {
        parent::run(); // TODO: Change the autogenerated stub

        $this->registerAssets();    // 注册资源包
        return $this->renderZtree();
    }

    protected function registerAssets(){
        $view = $this->getView();
        ZtreeAssets::register($view);

        if(!$this->data){
            return false;
        }


//        $script = "";
//        $script .= "var zNodes = ". $this->data .";\n";
//        $script .= "var treeId = '".$this->treeId."';\n";
//        $script .= "var addNodeUrl = '".$this->addNodeUrl."';\n";
//        $script .= "var removeNodeUrl = '".$this->removeNodeUrl."';\n";
//        $script .= "var newNodeDefautTxt = '".$this->newNodeDefautTxt."';\n";
//        $view->registerJs($script, \yii\web\View::POS_END);// 注册至头部


        $this->data = "var ".$this->ztreeName." = ".$this->data;
        $settingView = [
            'addHoverDom' => 'addHoverDom',// 用于当鼠标移动到节点上时，显示用户自定义控件，显示隐藏状态同 zTree 内部的编辑、删除按钮,请务必与 下面的removeHoverDom 同时使用；属于高级应用，使用时请确保对 zTree 比较了解。
            'removeHoverDom' => 'removeHoverDom',// 用于当鼠标移出节点时，隐藏用户自定义控件，显示隐藏状态同 zTree 内部的编辑、删除按钮
            'selectedMulti' => 'false'
        ];

        /**
         * ztree编辑按钮，重命名与删除
         */
        $settingEdit = [
            'enable' => true, // 设置 zTree 是否可以处于编辑状态
            'editNameSelectAll' => true, // 节点编辑名称 input 初次显示时,设置 txt 内容是否为全选状态
            'showRenameBtn' => false, // 设置是否显示编辑名称按钮
            'showRemoveBtn' => false,// 设置是否显示删除按钮，与callback.beforeRemove关联
            'removeTitle' => '删除',
            'renameTitle' => '修改',
            'drag' => [
                'isCopy' => false, // 不允许复制
                'isMove' => false, // 不允许移动
            ]
        ];

        $settingCallback = [
            'onClick' => 'zTreeOnClick',
             'beforeDrag' => 'beforeDrag', // 禁止拖拽
//            'beforeEditName' => 'beforeEditName',
//            'beforeRemove' => 'beforeRemove',
//            'beforeRename' => 'beforeRename',
//            'onRemove' => 'onRemove',
//            'onRename' => 'onRename', // 重命名事件
//            'onDrag' => 'onDrag', // 移动事件
        ];


        // 如果没有添加节点的ajax地址，不显示添加按钮
        if(!$this->addNodeUrl){
            unset($settingView['addHoverDom']);
        }

        // 如果有重命名节点ajax地址，显示编辑按钮
        if($this->renameUrl){
            $settingEdit['showRenameBtn'] = true; // 是否显示重命名按钮
            $settingCallback['beforeRename'] = 'beforeRename'; // 重命名之前的事件
            $settingCallback['onRename'] = 'onRename'; // 重命名事件
        }

        // 如果有删除节点ajax地址，显示移除按钮
        if($this->removeNodeUrl){
            $settingEdit['showRemoveBtn'] = true;
            if($this->isRemoveConfirm){
                // 移除之前弹出询问框
                $settingCallback['beforeRemove'] = 'beforeRemove';
            }
            $settingCallback['onRemove'] = 'onRemove';
        }

        // 遗留问题，这里转化上面的setting为json的时候【不需要双引号】，需要解决的，没有双引号的叫json对象。
        $settingView = Json::encode($settingView,JSON_UNESCAPED_UNICODE);
        $settingEdit = Json::encode($settingEdit);
        $settingCallback = Json::encode($settingCallback);

//        p($settingEdit);
        $settingView = str_replace('"','',$settingView);
//        $settingEdit = str_replace('"','',$settingEdit); // 设置不需要去掉双引号
        $settingCallback = str_replace('"','',$settingCallback);

        $setting = "
var setting = {
        view: {$settingView},
        edit: {$settingEdit},
        data: {
            simpleData: {
                enable: true
            }
        },
        callback: {$settingCallback}
    };
";
        $this->_setting = $setting;
//        $view->registerJs($setting, \yii\web\View::POS_END);
    }

    public function renderZtree(){

        return $this->render('edit_super', [
            'setting' => $this->_setting,
            'zNodes' => $this->data,
            'treeId' => $this->treeId,
            'ztreeName' => $this->ztreeName,
            'addNodeUrl' => $this->addNodeUrl,
            'removeNodeUrl' => $this->removeNodeUrl,
            'renameUrl' => $this->renameUrl,
            'newNodeDefautTxt' => $this->newNodeDefautTxt,
            'odr' => $this->odr,
            'data' => $this->data,
        ]);
    }

}